#!/usr/bin/perl -w
# Authors: Thomas Dybdal Pedersen
# For license see /usr/biotools/CMG-biotools.license
use strict;
use Getopt::Long;

#### INPUT CHECK
my $config;

if ($#ARGV < 0){
	print "\n";
	print "USAGE: cm2creator -c <configFile>\n";
	print "Creates the required colorscale files as specified in a genewiz configuration file\n";
	print "\n";
	print "-c\tThe name of the genewiz configuration file <REQUIRED>\n";
	print "\n";
	exit;
}

if ($#ARGV == 0){
	$config = $ARGV[0];
}
else {
	GetOptions ("c=s"	=> \$config);
}
die unless -e $config;

#### END OF INPUT CHECK


#### CREATE cm2 FILES

my @scales = &extractcm2;
foreach(@scales){
	my $scale = $_;
	&cm2("${scale}");
}

#### END OF FILE CREATION


#### SUBROUTINE DEFINITION
sub extractcm2 {
	open CONFIG, "<", "${config}";
	my @list;
	while(<CONFIG>){
		my @match = /[0-9_]+\.cm2/ig;
		@list = (@list, @match);
	}
	foreach (@list){
		s/\.cm2//ig;
	}
	@list;
}
sub cm2 {
	# Authors: Peter Fisher Hallin
	# For license see /usr/biotools/CMG-biotools.license
	open OUT, ">", "${_[0]}.cm2";
	select OUT;
	
	my @input = split(/[-_]/, $_[0]);
	my $r = 0.1*substr($input[0], 0, 2);
	my $g = 0.1*substr($input[0], 2, 2);
	my $b = 0.1*substr($input[0], 4, 2);
	
	printf "%1.2f %1.2f %1.2f\n", 0.3*$r, 0.3*$g, 0.3*$b unless $r == 1 && $g == 1 && $b == 1;
	
	my $i;
	for ($i = 0; $i < $#input; $i++) {
		$r = 0.1*substr($input[$i], 0, 2);
		my $rf = 0.1*substr($input[$i+1], 0, 2)-$r;
		$g = 0.1*substr($input[$i], 2, 2);
		my $gf = 0.1*substr($input[$i+1], 2, 2)-$g;
		$b = 0.1*substr($input[$i], 4, 2);
		my $bf = 0.1*substr($input[$i+1], 4, 2)-$b;
		my $j = 0;
		while ($j < 0.895) {
			printf "%1.2f %1.2f %1.2f\n", 0.9*$r+$j*$rf, 0.9*$g+$j*$gf, 0.9*$b+$j*$bf;
			if ($rf > 0 || $gf > 0 || $bf > 0) {
				if ($j < 0.45) {
					$j += 0.1;
				}
				elsif ($j < 0.825) {
					$j += 0.05;
				}
				else {
		        	$j += 0.01;
				}
			}
			else {
				if ($j < 0.045) {
					$j += 0.01;
				}
				elsif ($j < 0.375) {
					$j += 0.05;
				}
				else {
					$j += 0.10;
				}
			}
		}
	}
	
	$r = 0.1*substr($input[$i], 0, 2);
	$g = 0.1*substr($input[$i], 2, 2);
	$b = 0.1*substr($input[$i], 4, 2);
	
	printf "%1.2f %1.2f %1.2f\n", 0.9*$r, 0.9*$g, 0.9*$b;
	printf "%1.2f %1.2f %1.2f\n", 0.3*$r, 0.3*$g, 0.3*$b unless $r == 1 && $g == 1 && $b == 1;
	
	close OUT;
}
#### END OF SUBROUTINE DEFINITION